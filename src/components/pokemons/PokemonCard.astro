---
interface Props {
  url: string
  name: string
  isBig?: boolean
}

const { name, url, isBig = false } = Astro.props
const id = url.split('/').at(-2)
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<pokemon-card
  ref={id}
  class:list={[
    'grid place-items-center gap-2 px-4 py-2',
    {
      'transform rounded-xl border-2 transition duration-300 hover:scale-105':
        !isBig,
    },
  ]}
>
  <img
    src={imageSrc}
    alt={name}
    transition:name={`${name}-image`}
    class:list={[
      'object-cover',
      {
        'size-96': isBig,
        'size-32': !isBig,
      },
    ]}
  />
  <h3
    class:list={[
      'capitalize',
      {
        'text-3xl text-blue-400': isBig,
      },
    ]}
  >
    #{id}
    {name}
  </h3>
</pokemon-card>

<script>
  import { navigate } from 'astro:transitions/client'

  class PokemonCard extends HTMLElement {
    constructor() {
      super()

      const id = this.getAttribute('ref')
      this.addEventListener('click', () => {
        // navigate(`/pokemons/${nombre}`)
        navigate(`/pokemon/${id}`)
      })
    }
  }

  customElements.define('pokemon-card', PokemonCard)
</script>
