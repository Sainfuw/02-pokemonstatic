---
import PokemonCard from '@/components/pokemons/PokemonCard.basic.astro'
import type { PokeBasicInfo } from '@/interfaces/pokemon'
import MainLayout from '@/layouts/MainLayout.astro'
import type { GetStaticPaths } from 'astro'
import Title from '@/components/pokemons/shared/Title.astro'
import { Icon } from 'astro-icon/components'

export const getStaticPaths = (async () => {
  const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151')
  const { results } = (await resp.json()) as PokeBasicInfo
  return results.map(({ name, url }) => ({
    params: { name },
    props: { name, url },
  }))
}) satisfies GetStaticPaths

const { name } = Astro.params
const { url } = Astro.props

const id = url.split('/').at(-2)
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<MainLayout
  title={`Pokemon | #${id} ${name}`}
  description={`Informacion sobre el pokemon ${name}`}
  image={imageSrc}
>
  <section class="m-10 grid place-items-center gap-4">
    <div class="grid place-items-center">
      <button
        class="m-2 text-blue-500 hover:text-blue-200"
        onclick="history.back()"
      >
        <Icon name="arrow-back" class="size-10" />
      </button>
      <div class="flex gap-4">
        <Title capitalize>{name} </Title>
        <button data-id={id} data-name={name}>
          <Icon
            name="heart-outlined"
            class="-mt-8 size-10 hover:animate-pulse"
          />
          <Icon
            name="heart-filled"
            class="hidden size-10 hover:animate-pulse"
          />
        </button>
      </div>

      <PokemonCard name={name} url={url} isBig />
      <audio controls>
        <source src={audioSrc} type="audio/ogg" />
        Your browser does not support the audio element.
      </audio>
    </div>
  </section>
</MainLayout>

<style>
  a {
    @apply text-blue-400 hover:underline;
  }
</style>

<script>
  const handlePageLoad = () => {
    const btn = document.querySelector('button[data-id]')

    btn?.addEventListener('click', () => {
      const id = btn.getAttribute('data-id')
      const name = btn.getAttribute('data-name')
      console.log({ id, name })
    })
  }

  document.addEventListener('astro:page-load', handlePageLoad)
</script>
